# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

jobs:

- template: tk-core-steps.yml  # Template reference
  parameters:
    name: linux
    vmImage: 'ubuntu-16.04'
    
- template: tk-core-steps.yml  # Template reference
  parameters:
    name: macOS
    vmImage: 'macOS-10.13'
    
- template: tk-core-steps.yml  # Template reference
  parameters:
    name: windows
    vmImage: 'vs2017-win2016'

- job: report_coverage
  pool: {vmImage: 'Ubuntu 16.04'}
  condition: always()
  dependsOn:
  - Linux
  - macOS
#  - Windows
  steps:
  - task: DownloadBuildArtifacts@0
    displayName: Download coverage files for each build
    inputs:
      buildType: current
      downloadType: specific
      itemPattern: coverage-*/*
      downloadPath: $(Build.ArtifactStagingDirectory)

  - task: UsePythonVersion@0
    displayName: setup python
    inputs:
      versionSpec: 3.7

  - script: |
      python -c '
      from pathlib import Path
      import shutil
      from_folder = Path("$(Build.ArtifactStagingDirectory)")
      destination_folder = Path("$(System.DefaultWorkingDirectory)")
      destination_folder.mkdir()
      for coverage_file in from_folder.glob("*/.coverage"):
          destination = destination_folder / f".coverage.{coverage_file.parent.name[9:]}"
          print(f"{coverage_file} copy to {destination}")
          shutil.copy(str(coverage_file), str(destination))'
      coverage html
      coverage xml
  - task: PublishCodeCoverageResults@1
    displayName: Publish Coverage to Azure
    inputs:
      codeCoverageTool: 'cobertura'
      summaryFileLocation: '$(System.DefaultWorkingDirectory)/coverage.xml'
      reportDirectory: '$(System.DefaultWorkingDirectory)/htmlcov'
      failIfCoverageEmpty: true
